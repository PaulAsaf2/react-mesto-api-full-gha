{"ast":null,"code":"export var baseUrl='http://image.api.nomoredomains.rocks';function checkResponse(res){if(res.ok){return res.json();}else{return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}}export function register(email,password){return fetch(\"\".concat(baseUrl,\"/signup\"),{method:'POST',headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({password:password,email:email})}).then(checkResponse);}export function authorize(email,password){return fetch(\"\".concat(baseUrl,\"/signin\"),{method:'POST',credentials:'include',headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email:email,password:password})}).then(checkResponse);}export function authStatus(){return fetch(\"\".concat(baseUrl,\"/auth-status\"),{method:'GET',credentials:'include',headers:{\"Content-Type\":\"application/json\"}}).then(checkResponse);}export function logout(){return fetch(\"\".concat(baseUrl,\"/logout\"),{method:'GET',credentials:'include',headers:{\"Content-Type\":\"application/json\"}}).then(checkResponse);}","map":{"version":3,"names":["baseUrl","checkResponse","res","ok","json","Promise","reject","concat","status","register","email","password","fetch","method","headers","body","JSON","stringify","then","authorize","credentials","authStatus","logout"],"sources":["C:/Users/Paul/react-mesto-api-full-gha/frontend/src/utils/authorization.js"],"sourcesContent":["export const baseUrl = 'http://image.api.nomoredomains.rocks'\r\n\r\nfunction checkResponse(res) {\r\n  if (res.ok) { return res.json(); }\r\n  else {\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n}\r\n\r\nexport function register(email, password) {\r\n  return fetch(`${baseUrl}/signup`, {\r\n    method: 'POST',\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ password, email })\r\n  })\r\n    .then(checkResponse)\r\n}\r\n\r\nexport function authorize(email, password) {\r\n  return fetch(`${baseUrl}/signin`, {\r\n    method: 'POST',\r\n    credentials: 'include',\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ email, password })\r\n  })\r\n    .then(checkResponse)\r\n}\r\n\r\nexport function authStatus() {\r\n  return fetch(`${baseUrl}/auth-status`, {\r\n    method: 'GET',\r\n    credentials: 'include',\r\n    headers: { \"Content-Type\": \"application/json\" }\r\n  })\r\n    .then(checkResponse)\r\n}\r\n\r\nexport function logout() {\r\n  return fetch(`${baseUrl}/logout`, {\r\n    method: 'GET',\r\n    credentials: 'include',\r\n    headers: { \"Content-Type\": \"application/json\" }\r\n  })\r\n    .then(checkResponse)\r\n}\r\n"],"mappings":"AAAA,MAAO,IAAM,CAAAA,OAAO,CAAG,sCAAsC,CAE7D,QAAS,CAAAC,aAAaA,CAACC,GAAG,CAAE,CAC1B,GAAIA,GAAG,CAACC,EAAE,CAAE,CAAE,MAAO,CAAAD,GAAG,CAACE,IAAI,EAAE,CAAE,CAAC,IAC7B,CACH,MAAO,CAAAC,OAAO,CAACC,MAAM,0CAAAC,MAAA,CAAYL,GAAG,CAACM,MAAM,EAAG,CAChD,CACF,CAEA,MAAO,SAAS,CAAAC,QAAQA,CAACC,KAAK,CAAEC,QAAQ,CAAE,CACxC,MAAO,CAAAC,KAAK,IAAAL,MAAA,CAAIP,OAAO,YAAW,CAChCa,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEN,QAAQ,CAARA,QAAQ,CAAED,KAAK,CAALA,KAAM,CAAC,CAC1C,CAAC,CAAC,CACCQ,IAAI,CAACjB,aAAa,CAAC,CACxB,CAEA,MAAO,SAAS,CAAAkB,SAASA,CAACT,KAAK,CAAEC,QAAQ,CAAE,CACzC,MAAO,CAAAC,KAAK,IAAAL,MAAA,CAAIP,OAAO,YAAW,CAChCa,MAAM,CAAE,MAAM,CACdO,WAAW,CAAE,SAAS,CACtBN,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEP,KAAK,CAALA,KAAK,CAAEC,QAAQ,CAARA,QAAS,CAAC,CAC1C,CAAC,CAAC,CACCO,IAAI,CAACjB,aAAa,CAAC,CACxB,CAEA,MAAO,SAAS,CAAAoB,UAAUA,CAAA,CAAG,CAC3B,MAAO,CAAAT,KAAK,IAAAL,MAAA,CAAIP,OAAO,iBAAgB,CACrCa,MAAM,CAAE,KAAK,CACbO,WAAW,CAAE,SAAS,CACtBN,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAChD,CAAC,CAAC,CACCI,IAAI,CAACjB,aAAa,CAAC,CACxB,CAEA,MAAO,SAAS,CAAAqB,MAAMA,CAAA,CAAG,CACvB,MAAO,CAAAV,KAAK,IAAAL,MAAA,CAAIP,OAAO,YAAW,CAChCa,MAAM,CAAE,KAAK,CACbO,WAAW,CAAE,SAAS,CACtBN,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAChD,CAAC,CAAC,CACCI,IAAI,CAACjB,aAAa,CAAC,CACxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}