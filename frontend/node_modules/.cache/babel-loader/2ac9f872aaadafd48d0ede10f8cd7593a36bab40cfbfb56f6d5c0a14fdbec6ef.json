{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n    this._request = this._request.bind(this);\n  }\n  _request(url, options) {\n    return fetch(url, options).then(this._checkResponse);\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  // профиль ----- профиль ----- профиль ----- профиль ----- профиль\n\n  // получает данные профиля\n  getProfileData() {\n    return this._request(`${this._baseUrl}/users/me`, {\n      credentials: 'include',\n      headers: this._headers\n    });\n  }\n\n  // отправляет данные профиля\n  setProfileData(data) {\n    return this._request(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      credentials: 'include',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    });\n  }\n\n  // аватар ----- аватар ----- аватар ----- аватар ----- аватар ----- аватар\n\n  // отправляет данные аватара\n  setAvatar(link) {\n    return this._request(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      credentials: 'include',\n      headers: this._headers,\n      body: JSON.stringify(link)\n    });\n  }\n\n  // карточки ----- карточки ----- карточки ----- карточки ----- карточки\n\n  // получает данные карточек\n  getInitialCards() {\n    return this._request(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    });\n  }\n\n  // отправляет данные для создания карточки\n  createCard(data) {\n    return this._request(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      credentials: 'include',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    });\n  }\n\n  // отправляет данные на удаление карточки\n  deleteCard(id) {\n    return this._request(`${this._baseUrl}/cards/${id}`, {\n      method: \"DELETE\",\n      credentials: 'include',\n      headers: this._headers\n    });\n  }\n\n  // лайк ----- лайк ----- лайк ----- лайк ----- лайк ----- лайк ----- лайк\n\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return this._request(`${this._baseUrl}/cards/${cardId}/likes`, {\n        method: \"PUT\",\n        credentials: 'include',\n        headers: this._headers\n      });\n    } else {\n      return this._request(`${this._baseUrl}/cards/${cardId}/likes`, {\n        method: \"DELETE\",\n        credentials: 'include',\n        headers: this._headers\n      });\n    }\n  }\n}\nexport const api = new Api({\n  baseUrl: 'http://localhost:3000',\n  // baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-60\",\n  headers: {\n    // authorization: \"b9ad9483-6c42-4e9a-8a8f-d7555df6de20\",\n    \"Content-Type\": \"application/json\"\n  }\n});","map":{"version":3,"names":["Api","constructor","_ref","baseUrl","headers","_baseUrl","_headers","_request","bind","url","options","fetch","then","_checkResponse","res","ok","json","Promise","reject","status","getProfileData","credentials","setProfileData","data","method","body","JSON","stringify","setAvatar","link","getInitialCards","createCard","deleteCard","id","changeLikeCardStatus","cardId","isLiked","api"],"sources":["C:/Users/Paul/react-mesto-api-full-gha/frontend/src/utils/Api.js"],"sourcesContent":["class Api {\r\n  constructor({ baseUrl, headers }) {\r\n    this._baseUrl = baseUrl;\r\n    this._headers = headers;\r\n    this._request = this._request.bind(this);\r\n  }\r\n\r\n  _request(url, options) {\r\n    return fetch(url, options).then(this._checkResponse);\r\n  }\r\n\r\n  _checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n\r\n  // профиль ----- профиль ----- профиль ----- профиль ----- профиль\r\n\r\n  // получает данные профиля\r\n  getProfileData() {\r\n    return this._request(`${this._baseUrl}/users/me`, {\r\n      credentials: 'include',\r\n      headers: this._headers,\r\n    });\r\n  }\r\n\r\n  // отправляет данные профиля\r\n  setProfileData(data) {\r\n    return this._request(`${this._baseUrl}/users/me`, {\r\n      method: \"PATCH\",\r\n      credentials: 'include',\r\n      headers: this._headers,\r\n      body: JSON.stringify(data),\r\n    });\r\n  }\r\n\r\n  // аватар ----- аватар ----- аватар ----- аватар ----- аватар ----- аватар\r\n\r\n  // отправляет данные аватара\r\n  setAvatar(link) {\r\n    return this._request(`${this._baseUrl}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      credentials: 'include',\r\n      headers: this._headers,\r\n      body: JSON.stringify(link),\r\n    });\r\n  }\r\n\r\n  // карточки ----- карточки ----- карточки ----- карточки ----- карточки\r\n\r\n  // получает данные карточек\r\n  getInitialCards() {\r\n    return this._request(`${this._baseUrl}/cards`, {\r\n      headers: this._headers,\r\n    });\r\n  }\r\n\r\n  // отправляет данные для создания карточки\r\n  createCard(data) {\r\n    return this._request(`${this._baseUrl}/cards`, {\r\n      method: \"POST\",\r\n      credentials: 'include',\r\n      headers: this._headers,\r\n      body: JSON.stringify(data),\r\n    });\r\n  }\r\n\r\n  // отправляет данные на удаление карточки\r\n  deleteCard(id) {\r\n    return this._request(`${this._baseUrl}/cards/${id}`, {\r\n      method: \"DELETE\",\r\n      credentials: 'include',\r\n      headers: this._headers,\r\n    });\r\n  }\r\n\r\n  // лайк ----- лайк ----- лайк ----- лайк ----- лайк ----- лайк ----- лайк\r\n\r\n  changeLikeCardStatus(cardId, isLiked) {\r\n    if (isLiked) {\r\n      return this._request(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n        method: \"PUT\",\r\n        credentials: 'include',\r\n        headers: this._headers,\r\n      });\r\n    } else {\r\n      return this._request(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n        method: \"DELETE\",\r\n        credentials: 'include',\r\n        headers: this._headers,\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport const api = new Api({\r\n  baseUrl: 'http://localhost:3000',\r\n  // baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-60\",\r\n  headers: {\r\n    // authorization: \"b9ad9483-6c42-4e9a-8a8f-d7555df6de20\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}